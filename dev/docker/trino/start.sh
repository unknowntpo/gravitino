#!/bin/bash
set -e

# install Ranger trino plugin
if [[ -n "${RANGER_TRINO_REPOSITORY_NAME}" && -n "${RANGER_SERVER_URL}" ]]; then
	cd ${RANGER_TRINO_PLUGIN_HOME}
	sed -i "s|POLICY_MGR_URL=|POLICY_MGR_URL=${RANGER_SERVER_URL}|g" install.properties
	sed -i "s|REPOSITORY_NAME=|REPOSITORY_NAME=${RANGER_TRINO_REPOSITORY_NAME}|g" install.properties
	echo "XAAUDIT.SUMMARY.ENABLE=true" >>install.properties
	sed -i "s|COMPONENT_INSTALL_DIR_NAME=|COMPONENT_INSTALL_DIR_NAME=/usr/lib/trino|g" install.properties

	# Set up access control properties
	# https://trino.io/docs/current/security/built-in-system-access-control.html#multiple-access-control
	echo 'access-control.name=ranger' >>/etc/access-control.properties

	${RANGER_TRINO_PLUGIN_HOME}/enable-trino-plugin.sh

	# https://trino.io/docs/current/security/ranger-access-control.html#ranger-trino-security-xml
	cat <<'EOF' >>${RANGER_TRINO_PLUGIN_HOME}/ranger-trino-security.xml
<?xml-stylesheet type="text/xsl" href="configuration.xsl"?>
<configuration xmlns:xi="http://www.w3.org/2001/XInclude">
  <property>
    <name>ranger.plugin.trino.policy.rest.url</name>
    <value>${RANGER_SERVER_URL}</value>
    <description>MANDATORY: a comma separated list of URLs to Apache Ranger instances in a deployment</description>
  </property>

  <property>
    <name>ranger.plugin.trino.access.cluster.name</name>
    <value></value>
    <description>Name to identify the cluster running the Trino instance. This is recorded in audit logs generated by the plugin</description>
  </property>

  <property>
    <name>ranger.plugin.trino.use.rangerGroups</name>
    <value>false</value>
    <description>Boolean flag to specify whether user-to-groups mapping should be obtained from in Apache Ranger. Default: false</description>
  </property>

  <property>
    <name>ranger.plugin.trino.use.only.rangerGroups</name>
    <value>false</value>
    <description>Boolean flag. true: use only user-to-groups mapping from Apache Ranger; false: use user-to-groups mappings from Apache Ranger and Trino. Default: false</description>
  </property>

  <property>
    <name>ranger.plugin.trino.super.users</name>
    <value></value>
    <description>Comma separated list of user names. Superusers will be authorized for all accesses, without requiring explicit policy grants.</description>
  </property>

  <property>
    <name>ranger.plugin.trino.super.groups</name>
    <value></value>
    <description>Comma separated list of group names. Users in supergroups will be authorized for all accesses, without requiring explicit policy grants</description>
  </property>

  <property>
    <name>ranger.plugin.trino.ugi.initialize</name>
    <value>false</value>
    <description>Initialize the kerberos identity used to authenticate with Ranger admin server</description>
  </property>

  <property>
    <name>ranger.plugin.trino.ugi.login.type</name>
    <value></value>
    <description>Valid value: keytab</description>
  </property>

  <property>
    <name>ranger.plugin.trino.ugi.keytab.principal</name>
    <value></value>
    <description>Kerberos principal. Example: trino@EXAMPLE.COM</description>
  </property>

  <property>
    <name>ranger.plugin.trino.ugi.keytab.file</name>
    <value></value>
    <description>Location of keytab file. Example: /etc/trino/trino.keytab</description>
  </property>
</configuration>
EOF

	# https://trino.io/docs/current/security/ranger-access-control.html#ranger-trino-audit-xml
	cat <<'EOF' >>${RANGER_TRINO_PLUGIN_HOME}/ranger-trino-audit.xml

<?xml-stylesheet type="text/xsl" href="configuration.xsl"?>
<configuration xmlns:xi="http://www.w3.org/2001/XInclude">
  <property>
    <name>xasecure.audit.is.enabled</name>
    <value>true</value>
    <description>Boolean flag to specify if the plugin should generate access audit logs. Default: true</description>
  </property>
</configuration>
EOF
fi

# Start Trino server with the original command
/usr/lib/trino/bin/run-trino &

# persist the container
tail -f /dev/null
